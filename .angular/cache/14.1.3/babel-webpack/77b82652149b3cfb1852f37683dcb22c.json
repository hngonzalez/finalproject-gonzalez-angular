{"ast":null,"code":"import { LOGIN_SELECTORS } from './../../../../store/selectors/login.selectors';\nimport { LOGIN_ACTIONS } from './../../../../store/actions/login.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/auth.service\";\nimport * as i3 from \"@ngrx/store\";\n\nfunction CardLoginComponent_mat_label_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-label\", 9);\n    i0.ɵɵtext(1, \"Revise los datos ingresados\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CardLoginComponent_mat_progress_bar_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-progress-bar\", 10);\n  }\n}\n\nexport let CardLoginComponent = /*#__PURE__*/(() => {\n  class CardLoginComponent {\n    constructor(router, _authService, store) {\n      this.router = router;\n      this._authService = _authService;\n      this.store = store;\n      this.loading = false;\n      /* loading$: Observable<boolean> = this.store.select(LOGIN_SELECTORS.selectGetPerson); */\n\n      this.loading$ = this.store.select(LOGIN_SELECTORS.selectGetLoginLoading);\n      this.exists = true;\n      this.username = '';\n      this.password = '';\n    }\n\n    ngOnInit() {}\n\n    onLogin() {\n      this.store.dispatch(LOGIN_ACTIONS.login.run({\n        user: this.username,\n        password: this.password\n      }));\n      /* this.loading = true;\r\n      this.exists = true;\r\n      \r\n      setTimeout(() => {\r\n        this.loading = false;\r\n        this._authService.login()\r\n        .subscribe((resp: Person[]) => {\r\n          resp.forEach(element => {\r\n            if (element.username == this.username && element.password == this.password) {\r\n              localStorage.setItem('token', 'asdadadas');\r\n              this.router.navigate(['./']);\r\n            }\r\n          })\r\n        }, error => {\r\n          this.exists = false;\r\n        })\r\n      }, 2000); */\n    }\n\n  }\n\n  CardLoginComponent.ɵfac = function CardLoginComponent_Factory(t) {\n    return new (t || CardLoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Store));\n  };\n\n  CardLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CardLoginComponent,\n    selectors: [[\"app-card-login\"]],\n    decls: 26,\n    vars: 6,\n    consts: [[1, \"example-card\"], [\"appearance\", \"legacy\"], [\"matInput\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matSuffix\", \"\"], [\"type\", \"password\", \"matInput\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"inset\", \"\"], [\"mat-flat-button\", \"\", \"color\", \"primary\", 1, \"btn-login\", 3, \"click\"], [\"class\", \"error\", 4, \"ngIf\"], [\"mode\", \"indeterminate\", 4, \"ngIf\"], [1, \"error\"], [\"mode\", \"indeterminate\"]],\n    template: function CardLoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\", 0)(1, \"mat-card-subtitle\");\n        i0.ɵɵtext(2, \"Bienvenido!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mat-card-title\");\n        i0.ɵɵtext(4, \"Acceso de Usuarios\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mat-card-content\")(6, \"mat-form-field\", 1)(7, \"mat-label\");\n        i0.ɵɵtext(8, \"Usuario\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function CardLoginComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.username = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"mat-icon\", 3);\n        i0.ɵɵtext(11, \"account_circle_sharp \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"mat-form-field\", 1)(13, \"mat-label\");\n        i0.ɵɵtext(14, \"Contrase\\u00F1a\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function CardLoginComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"mat-icon\", 3);\n        i0.ɵɵtext(17, \"lock\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(18, \"mat-divider\", 5);\n        i0.ɵɵelementStart(19, \"mat-card-actions\")(20, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function CardLoginComponent_Template_button_click_20_listener() {\n          return ctx.onLogin();\n        });\n        i0.ɵɵtext(21, \" LOGIN \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(22, CardLoginComponent_mat_label_22_Template, 2, 0, \"mat-label\", 7);\n        i0.ɵɵelementStart(23, \"mat-card-footer\");\n        i0.ɵɵtemplate(24, CardLoginComponent_mat_progress_bar_24_Template, 1, 0, \"mat-progress-bar\", 8);\n        i0.ɵɵpipe(25, \"async\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngModel\", ctx.username);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", !ctx.exists);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(25, 4, ctx.loading$));\n      }\n    },\n    styles: [\".example-card[_ngcontent-%COMP%]{width:250px;display:flex;flex-direction:column;justify-content:center}.btn-login[_ngcontent-%COMP%]{width:100%;letter-spacing:4px}mat-card-content[_ngcontent-%COMP%]{display:flex;flex-direction:column;padding-top:20px}mat-form-field[_ngcontent-%COMP%]{padding:10px}mat-card-actions[_ngcontent-%COMP%]{padding:10px}.error[_ngcontent-%COMP%]{text-align:center;padding:10px;color:red}\"]\n  });\n  return CardLoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}